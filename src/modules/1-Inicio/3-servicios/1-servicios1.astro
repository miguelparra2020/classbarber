---
import { Image } from "astro:assets";
const items: any = [
    {
        title: "Corte en 7 ",
        description: "Tiene un desvanecido en los laterales y con pelo pronunciado",
        image: "https://e00-expansion.uecdn.es/assets/multimedia/imagenes/2022/05/19/16529550110272.jpg",
        href: "/7-Citas"
    },
    {
        title: "Corte Samurai Bun",
        description: "Tiene un desvanecido en los laterales y con pelo pronunciado",
        image: "https://e00-expansion.uecdn.es/assets/multimedia/imagenes/2023/09/15/16947631837896.jpg",
        href: "/7-Citas"
    },
    {
        title: "Corte Crop con flequillo",
        description: "Tiene un desvanecido en los laterales y con pelo pronunciado",
        image: "https://e00-expansion.uecdn.es/assets/multimedia/imagenes/2023/09/15/16947632993565.jpg",
        href: "/7-Citas"
    },
    {
        title: "Cortes con grecas o líneas",
        description: "Tiene un desvanecido en los laterales y con pelo pronunciado",
        image: "https://e00-expansion.uecdn.es/assets/multimedia/imagenes/2023/09/15/16947631376861.jpg",
        href: "/7-Citas"
    },
    {
        title: "Corte Samurai Bun",
        description: "Tiene un desvanecido en los laterales y con pelo pronunciado",
        image: "https://e00-expansion.uecdn.es/assets/multimedia/imagenes/2023/09/15/16947631837896.jpg",
        href: "/7-Citas"
    },
    {
        title: "Corte Crop con flequillo",
        description: "Tiene un desvanecido en los laterales y con pelo pronunciado",
        image: "https://e00-expansion.uecdn.es/assets/multimedia/imagenes/2023/09/15/16947632993565.jpg",
        href: "/7-Citas"
    },
]
---
<div id="" class="grid grid-cols-3 xl:grid-cols-4 py-8 gap-x-8 gap-y-6">
  <h3 class="text-2xl text-foreground font-bold col-span-3 xl:col-span-1 mx-4">
    Cortes en tendencia
  </h3>
  <div class="col-span-3 grid sm:grid-cols-2 md:grid-cols-3 gap-8 sm:gap-y-8 lg:gap-x-8 mx-4">
    {items.map((item: any, index: number) => (
      <a
        href={item.disabled ? undefined : item.href}
        class="group bg-customColor5 rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 opacity-0 translate-y-10 card"
        style={`animation-delay: ${index * 5}s`}
      >
        <div class="relative aspect-[4/4]">
          <Image
            loading="eager"
            width="700"
            height="700"
            src={item.image}
            alt="placeholder"
            class="w-full h-full object-cover object-top transition-transform duration-300 group-hover:scale-105"
          />
        </div>
        <div class="py-4 px-5 border-t">
          <p class="font-semibold text-lg text-foreground mb-2">{item.title}</p>
          <p class="text-sm text-muted-foreground/85 mb-4">{item.description}</p>
          <button class="btn bg-customColor4 text-white p-2 rounded-lg hover:bg-customColor2 hover:text-customColor6 transition-colors duration-300 flex items-center">
            <span>Solicitar cita</span>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="ml-2" viewBox="0 0 16 16">
              <path d="M3.5 3.5c-.614-.884-.074-1.962.858-2.5L8 7.226 11.642 1c.932.538 1.472 1.616.858 2.5L8.81 8.61l1.556 2.661a2.5 2.5 0 1 1-.794.637L8 9.73l-1.572 2.177a2.5 2.5 0 1 1-.794-.637L7.19 8.61zm2.5 10a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0m7 0a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0"/>
            </svg>
          </button>
        </div>
      </a>
    ))}
  </div>
</div>

<script >
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('show');
                observer.unobserve(entry.target); // Deja de observar cuando la animación se activa
            }
        });
    });

    const handleIntersection = () => {
        const cards = document.querySelectorAll('.card');
        cards.forEach(card => observer.observe(card));
    };

    setTimeout(handleIntersection, 100); // Asegura que se ejecuta después del renderizado
</script>

<style>
  .card {
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .card.show {
    opacity: 1;
    transform: translateY(0);
  }
</style>
